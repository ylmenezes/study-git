name: Create Release

on:
  pull_request:
    types: [closed]
    branches: [master]

jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install @octokit/rest

      - name: Get Pull Request Information
        id: pr-info
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          script: |
            const { Octokit } = require('@octokit/rest');
            const octokit = new Octokit({
              auth: 'token ${{ env.GITHUB_TOKEN }}'
            });

            const pullRequest = await octokit.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const labels = pullRequest.data.labels.map(label => label.name);

            const latestTagResponse = await octokit.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            let version = '0.0.0';
            const pullRequestCommit = pullRequest.data.head.sha;
            for (const tag of latestTagResponse.data) {
              if (tag.commit.sha === pullRequestCommit) {
                version = tag.name.substr(1);
                break;
              }
            }

            const tag = 'v' + version;

            octokit.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              target_commitish: pullRequest.data.head.sha,
              name: 'Release ' + tag,
              body: 'This is the release for version ' + tag
            });
