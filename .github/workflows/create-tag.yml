name: Create Tag

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: [master]

jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install @octokit/rest

      - name: Get Pull Request Information
        id: pr-info
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          script: |
            const { Octokit } = require('@octokit/rest');
            const octokit = new Octokit({
              auth: 'token ${{ env.GITHUB_TOKEN }}'
            });

            const pullRequest = await octokit.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            console.log(context);

            const labels = pullRequest.data.labels.map(label => label.name);


            const latestTagResponse = await octokit.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            let version = '0.0.0';
            if (latestTagResponse.data.length > 0) {
              version = latestTagResponse.data[0].name.substr(1);
            }

            if (labels.includes('major')) {
              const major = version.split('.')[0];
              version = `${parseInt(major) + 1}.0.0`;
            } else 
            if (labels.includes('enhancement')) {
              const minor = version.split('.')[1];
              version = `${version.split('.')[0]}.${parseInt(minor) + 1}.0`;
            } else 
            if (labels.includes('bug')) {
              const patch = version.split('.')[2];
              version = `${version.split('.')[0]}.${version.split('.')[1]}.${parseInt(patch) + 1}`;
            }

            const tag = 'v' + version;

            octokit.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/' + tag,
              sha: pullRequest.data.head.sha
            });

            console.log(`Tag ${tag} created.`);
